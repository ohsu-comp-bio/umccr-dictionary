# You can use docker-compose.override.yml for any overrides
# to settings in this base compose file including environment
# variables. See docker-compose.override.sample.yml

version: '3.1'

services:

  ddvis:
    image: quay.io/victorskl/ddvis
    container_name: ddvis
    volumes:
      - ./schema:/usr/share/nginx/html/schema:ro
    ports:
      - 80:80

  g3po:
    image: quay.io/victorskl/g3po
    command: [ "tail", "-f", "/dev/null" ]
    container_name: g3po
    volumes:
      - ./schema:/schema:rw
      - ./dictionary:/dictionary:rw

  postgres:
    image: postgres:9.6
    container_name: ddpostgres
    ports:
      - 5432:5432
    volumes:
      - ./sql/init.sh:/docker-entrypoint-initdb.d/init.sh
      - ./sql:/sql
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PG_HOST: ${PG_HOST}
      PG_USER: ${PG_USER}
      PG_PASS: ${PG_PASS}
      PG_NAME: ${PG_NAME}

  dmutils:
    image: quay.io/victorskl/datamodelutils
    container_name: dmutils
    command: [ "tail", "-f", "/dev/null" ]
    environment:
      PG_HOST: ${PG_HOST}
      PG_USER: ${PG_USER}
      PG_PASS: ${PG_PASS}
      PG_NAME: ${PG_NAME}

  ddsim:
    image: quay.io/cdis/data-simulator:1.3.3
    container_name: ddsim
    command: [ "tail", "-f", "/dev/null" ]
    volumes:
      - ./data:/data

  ddimporter:
    # See docker-compose.override.sample.yml for override with local image
    image: quay.io/victorskl/ddimporter
    container_name: ddimporter
    command: [ "tail", "-f", "/dev/null" ]
    environment:
      PG_HOST: ${PG_HOST}
      PG_USER: ${PG_USER}
      PG_PASS: ${PG_PASS}
      PG_NAME: ${PG_NAME}
      PSQL: ${PSQL}
      PGPASSWORD: ${PG_PASS}
    volumes:
      - ./output:/importer/output:rw
      - ./data:/importer/data:ro
      - ./schema:/importer/schema:ro
